version: '3'

services:
  db:
    image: postgres
    container_name: postgres
    volumes:
      - ./postgres/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    ports:
      - "5672:5672"
      - "15672:15672"

  microservice:
    build: .
    image: lut1k/microservice:latest
    container_name: microservice
    command: sh -c "sleep 30; python manage.py migrate --no-input && python manage.py runserver 0.0.0.0:8000;"
    env_file:
      - variables.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq

  refresh_leaderboardview:
    image: lut1k/microservice:latest
    container_name: refresh_leaderboardview
    command: sh -c "sleep 60; python manage.py refresh_leaderboardview;"
    env_file:
      - variables.env
    depends_on:
      - db
    restart: on-failure

  receive_messages:
    image: lut1k/microservice:latest
    container_name: receive_messages
    command: sh -c "sleep 45; python manage.py receive_messages"
    env_file:
      - variables.env
    depends_on:
      - db
      - rabbitmq
